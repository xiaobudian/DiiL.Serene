权限管理：
	在模块中添加 PermissionKeys.cs文件 
	然后需要在需要使用的地方添加
	[ReadPermission(Aoc.PermissionKeys.ScorePolicy.View)]
    [ModifyPermission(Aoc.PermissionKeys.ScorePolicy.Modify)]
    [DeletePermission(Aoc.PermissionKeys.ScorePolicy.Delete)]
	否则系统不识别 详见下面的注释
	namespace DiiL.Serene.Aoc
{
    /// <summary>
    /// This class contains some permission key constants solely for
    /// easy access and intellisense purposes.
    /// 
    /// Please note that adding a permission here won't show it
    /// in user permissions dialog. In fact, Serenity doesn't
    /// care about this class at all.
    /// 
    /// To show a new permission in user/role permission dialog, just use
    /// its string key with ReadPermission / ModifyPermission / 
    /// DeletePermission / PageAuthorize / ServiceAuthorize etc. attributes 
    /// and Serenity will auto discover them at application start.
    /// 
    /// Permission tree hierarchy in dialog is determined by colons (:)
    /// in permission keys.
    /// </summary>
    public class PermissionKeys
    {
        public class ScorePolicy
        {
            public const string Delete = "Aoc:ScorePolicy:Delete";
            public const string Modify = "Aoc:ScorePolicy:Modify";
            public const string View = "Aoc:ScorePolicy:View";
        }

        public const string General = "Aoc:General";
    }
}


不显示某些菜单
	在xxPage.cs 添加 View权限限制
	 [RoutePrefix("Aoc/ProductLine"), Route("{action=index}")]
    public class ProductLineController : Controller
    {
        [PageAuthorize(Aoc.PermissionKeys.ProductLine.View)]
        public ActionResult Index()
        {
            return View("~/Modules/Aoc/ProductLine/ProductLineIndex.cshtml");
        }
    }

缓存  如果你觉得代码没有问题但是总是不能加载你想要的数据，请重新build